version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - echo "Installing pnpm..."
      - npm install -g pnpm
      - echo "Installing dependencies..."
      - pnpm install --frozen-lockfile
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest}
  build:
    commands:
      - echo "Building the Docker image from root context..."
      - docker build --build-arg TURBO_TOKEN=${TURBO_TOKEN} --build-arg TURBO_TEAM=${TURBO_TEAM} --cache-from $REPOSITORY_URI:cache -t $REPOSITORY_URI:$IMAGE_TAG -f apps/frontend/Dockerfile .
  post_build:
    commands:
      - echo "Pushing the Docker image to ECR..."
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:cache
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:cache
      - echo "Writing image definitions file..."
      - printf '[{"name":"frontend-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "Registering task definition..."
      - sed -i "s|placeholder-image|$REPOSITORY_URI:$IMAGE_TAG|" task-definition.json
      - aws ecs register-task-definition --cli-input-json file://task-definition.json --region ap-northeast-2
artifacts:
  files:
    - imagedefinitions.json
cache:
  paths:
    - node_modules/**/*
    - .turbo/**/*
    - /root/.cache/docker/**/*
